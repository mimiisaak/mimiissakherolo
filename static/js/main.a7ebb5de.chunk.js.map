{"version":3,"sources":["reportWebVitals.js","components/weather/actionTypes.js","components/weather/reducer.js","components/weather/store.js","index.js","components/weather/Home.js","components/weather/actions.js","components/weather/Favorites.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_CITY","REMOVE_CITY","FAVORITECIRY","initialState","arr","defultCity","reducer","state","action","type","actions","concat","paylaod","filter","Key","obj","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","className","to","exact","path","component","APIKEY","useState","locationKey","setLocationKey","letter","setLetter","country","setCountry","cityList","setCityList","id","LocalizedName","details","setDetails","fivedays","setFivedays","city","setCity","flag","setFlag","findTemperature","a","axios","get","res","data","cityDetails","DetailsFor5Dais","tempfor5days","DailyForecasts","convertDay","day","Date","getDay","isAddRemoveFavorite","found","getState","find","item","addfavorite","dispatch","removefavorite","useEffect","updateBackground","name","content","onChange","e","target","value","length","map","i","label","onClick","Country","style","display","margin","class","LocalObservationDateTime","currentDate","getDate","getMonth","getFullYear","convertDate","Temperature","Metric","Value","WeatherText","Minimum","cities","setCities","reducre","detailstemp","console","log","temperatora","t","changeDefult","favoritecity","keys","src","document","getElementById"],"mappings":"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","file":"static/js/main.a7ebb5de.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const ADD_CITY = 'ADD CITY';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\nexport const FAVORITECIRY = 'FAVORITECIRY'","\r\nimport * as actions from '../weather/actionTypes';\r\nimport { getLastFocusable } from '@fluentui/react';\r\nconst initialState = {\r\n    arr: [],\r\n    defultCity: {\r\n        \"Version\": 1,\r\n        \"Key\": \"215854\",\r\n        \"Type\": \"City\",\r\n        \"Rank\": 31,\r\n        \"LocalizedName\": \"Tel Aviv\",\r\n        \"Country\": {\r\n            \"ID\": \"IL\",\r\n            \"LocalizedName\": \"Israel\"\r\n        },\r\n        \"AdministrativeArea\": {\r\n            \"ID\": \"TA\",\r\n            \"LocalizedName\": \"Tel Aviv\"\r\n        }\r\n    }\r\n\r\n}\r\n//normally use ES6 default argument syntax to provide initial state\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actions.ADD_CITY:\r\n            return {\r\n                ...state,\r\n                arr: state.arr.concat(action.paylaod)\r\n\r\n            };\r\n        case actions.REMOVE_CITY:\r\n            return {\r\n                ...state,\r\n                arr: [...state.arr.filter(({ Key }) => Key !== action.Key)]\r\n            };\r\n        case actions.FAVORITECIRY:\r\n            return {\r\n                ...state,\r\n                defultCity: action.obj\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from '../weather/reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport produce from 'immer';\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(ReduxThunk)\r\n    )\r\n)\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router, Route, Link, Switch, BrowserRouter } from 'react-router-dom'\r\nimport Home from './components/weather/Home';\r\nimport Favorites from './components/weather/Favorites';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './components/weather/reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { cityadd } from './components/weather/actions'\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(ReduxThunk)\r\n  )\r\n\r\n)\r\nexport default store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <div>\r\n      <Router>\r\n        <React.StrictMode>\r\n          <div className=\"router\">\r\n            <div className=\"topnav\">\r\n              <div> <Link to='/'><button className=\"home\">Home</button></Link></div>\r\n              <div><Link to='/Favorites'><button className=\"favorites\">Favorites</button></Link></div>\r\n            </div>\r\n          </div>\r\n        </React.StrictMode>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IComboBoxStyles, SelectableOptionMenuItemType, IButtonStyles, } from '@fluentui/react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DialogContentText } from '@material-ui/core';\r\nimport {\r\n    Combobox,\r\n    ComboboxInput,\r\n    ComboboxPopover,\r\n    ComboboxList,\r\n    ComboboxOption,\r\n    ComboboxOptionText,\r\n} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport { ComboBox } from 'office-ui-fabric-react';\r\nimport './CSS.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport store from '../weather/store';\r\nimport { cityadd, removecity } from '../weather/actions';\r\n\r\nexport default function Home() {\r\n    const APIKEY = \"PsrXOHf2tohNLpKUAKa8fvVxDBwpM5bz\";\r\n    const [locationKey, setLocationKey] = useState(210841);\r\n    const [location, setLocation] = useState({});\r\n    const [letter, setLetter] = useState(\"tel aviv\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [cityList, setCityList] = useState([]);\r\n    const [option, setOption] = useState([{ id: 0, LocalizedName: \"\" }]);\r\n    const [details, setDetails] = useState([]);\r\n    const [fivedays, setFivedays] = useState([]);\r\n    const [city, setCity] = useState([{}]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [flag, setFlag] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setCity(store.getState().defultCity)\r\n        setLocationKey(store.getState().defultCity.Key);\r\n        cityDetails(store.getState().defultCity.Key);\r\n    }, []);\r\n    //get function to autocomplete\r\n    function getlocation() {\r\n        return axios.get('https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=' + APIKEY + '&q=' + letter + '&language=en')\r\n            .then(res => res.data);\r\n    }\r\n    //insert the autocomplete to list\r\n    function autocomplete() {\r\n        getlocation().then(data => setCityList(data));\r\n\r\n    }\r\n\r\n    //get function for finding the temperature of a particular city\r\n    async function findTemperature(locationKey) {\r\n        return axios.get(\"https://dataservice.accuweather.com/currentconditions/v1/\" + locationKey + \"?apikey=\" + APIKEY + \"&details=true&language=en\")\r\n            .then(res => res.data);\r\n\r\n    }\r\n    //update city temperature details \r\n    async function cityDetails(locationKey) {\r\n        findTemperature(locationKey).then(data => setDetails(data))\r\n        DetailsFor5Dais(locationKey)\r\n    }\r\n    //get function for finding a forecast for the next 5 days\r\n    function tempfor5days(locationKey) {\r\n        return axios.get('https://dataservice.accuweather.com/forecasts/v1/daily/5day/' + locationKey + '?apikey=' + APIKEY + '&language=en&details=false&metric=false')\r\n            .then(res => res.data);\r\n    }\r\n    //Update temperature details for 5 days\r\n    function DetailsFor5Dais(locationKey) {\r\n        tempfor5days(locationKey).then(data => setFivedays(data.DailyForecasts))\r\n    };\r\n    function convertDay(day) {\r\n        var day = new Date(day);\r\n        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        var dayName = days[day.getDay()];\r\n        return dayName;\r\n    }\r\n    function convertDate(day) {\r\n        var currentDate = new Date(day);\r\n        var date = currentDate.getDate();\r\n        var month = currentDate.getMonth();\r\n        var year = currentDate.getFullYear();\r\n        var dateString = date + \"-\" + (month + 1) + \"-\" + year;\r\n        return dateString;\r\n    }\r\n    function isAddRemoveFavorite() {\r\n        let found = store.getState().arr.find(item => item.Key == city.Key);\r\n        if (found != null)\r\n            setFlag(0);\r\n        else\r\n            setFlag(1);\r\n    }\r\n    // addfavorite\r\n    function addfavorite(city) {\r\n        store.dispatch(cityadd(city));\r\n        setFlag(flag - 1)\r\n    }\r\n    //removefavorite\r\n    function removefavorite() {\r\n        store.dispatch(removecity(city.Key));\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n           \r\n            <div className=\"hello\" updateBackground ></div>\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta>\r\n            <div>\r\n                <Combobox aria-label=\"Cities\">\r\n                    <ComboboxInput\r\n                        className=\"city-search-input\"\r\n                        onChange={e => { setLetter(e.target.value) }}\r\n                    />\r\n                    {autocomplete()}\r\n                    {cityList && (\r\n                        <ComboboxPopover className=\"shadow-popup\">\r\n                            {cityList.length > 0 ? (\r\n                                <ComboboxList>\r\n                                    {cityList.map((i, item) => (\r\n                                        <ComboboxOption\r\n                                            key={item}\r\n                                            value={i.LocalizedName}\r\n                                            label=\"search city..\"\r\n                                            onClick={e => <div>{setLocationKey(i.Key)},{setLetter(i.LocalizedName)},{setCountry(i.Country.LocalizedName)},{setCity(i)},</div>} />\r\n                                    ))}\r\n                                </ComboboxList>\r\n                            ) : (\r\n                                <span style={{ display: \"block\", margin: 8 }}>\r\n                                    No results found\r\n                                </span>\r\n                            )}\r\n                        </ComboboxPopover>\r\n                    )}\r\n                </Combobox>\r\n            </div>\r\n            <button onClick={e => <div> {cityDetails(locationKey)},{isAddRemoveFavorite()}</div>}>חפש</button>\r\n            {\r\n                flag ?\r\n                <button  id=\"button\"onClick={e => { addfavorite(city) }}>הוספה למועדפים</button> :\r\n                <button  id=\"button\"onClick={e => { removefavorite() }}> הסרה ממועדפים</button>\r\n            }\r\n            <div>\r\n                <div class=\"page-content page-container\" id=\"page-content\">\r\n                    <div class=\"padding\">\r\n                        <div class=\"row container d-flex justify-content-center\">\r\n                            <div class=\"col-lg-8 grid-margin stretch-card\">\r\n                                {/* <!--weather card--> */}\r\n                                <div class=\"card card-weather\">\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"weather-date-location\">\r\n                                            {details.map(i => <h3>{convertDay(i.LocalObservationDateTime)}</h3>)}\r\n                                            <p class=\"text-gray\"> <span class=\"weather-date\">{details.map(i => convertDate(i.LocalObservationDateTime))}</span> <span\r\n                                                class=\"weather-location\">{city.LocalizedName},{country}</span> </p>\r\n                                        </div>\r\n                                        <div class=\"weather-data d-flex\">\r\n                                            <div class=\"mr-auto\">\r\n                                                <h4 class=\"display-3\">{details.map(i => i.Temperature.Metric.Value)} <span class=\"symbol\">°</span>C</h4>\r\n                                                <p> {details.length > 0 ? <div> <h3>{details.map(i => i.WeatherText)}</h3></div> : 'erroeee'} </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-body p-0\">\r\n                                        {\r\n                                            details.length > 0 ? <div class=\"d-flex weakly-weather\">\r\n                                                {fivedays.map(i => <div class=\"weakly-weather-item\"><p class='mb-1'>{convertDay(i.Date)}</p><i class=\"mdi mdi-weather-partlycloudy\"></i><p class=\"mb-0\"> {i.Temperature.Minimum.Value}</p></div>)}\r\n                                            </div> : 'erroeee'\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n\r\n    );\r\n\r\n}","\r\nimport * as actions from '../weather/actionTypes';\r\nexport const cityadd = (data) => ({\r\n  type: actions.ADD_CITY,\r\n  paylaod: data\r\n})\r\nexport const removecity = (Key) => (\r\n  {\r\n    type: actions.REMOVE_CITY,\r\n    Key\r\n\r\n  }\r\n)\r\nexport const favoritecity = (obj) => (\r\n  {\r\n    type: actions.FAVORITECIRY,\r\n    obj\r\n  }\r\n)","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IComboBoxStyles, SelectableOptionMenuItemType, IButtonStyles, } from '@fluentui/react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DialogContentText } from '@material-ui/core';\r\nimport { HashRouter as Router, Route, Link, Switch, BrowserRouter } from 'react-router-dom'\r\nimport {\r\n    Combobox,\r\n    ComboboxInput,\r\n    ComboboxPopover,\r\n    ComboboxList,\r\n    ComboboxOption,\r\n    ComboboxOptionText,\r\n} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport './Favorites.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport store from '../weather/store';\r\nimport { cityadd, favoritecity } from '../weather/actions';\r\n\r\nexport default function Favorites() {\r\n    const APIKEY = \"PsrXOHf2tohNLpKUAKa8fvVxDBwpM5bz\";\r\n    const [cities, setCities] = useState([])\r\n    const [details, setDetails] = useState([]);\r\n    const [reducre, setReducre] = useState(store.getState().arr);\r\n\r\n    useEffect(() => {\r\n        reducre.map(i => setCities(cities => [...cities, (i.Key, detailstemp(i.keys))]))\r\n        console.log(cities)\r\n\r\n    }, []);\r\n    function newTemp(cityId) {\r\n        setCities(cities => [...cities, (cityId, details.map(i => i.Temperature.Metric.Value))])\r\n    }\r\n    function temperatora2(cityId) {\r\n        console.log(axios.get(\"https://dataservice.accuweather.com/currentconditions/v1/210841?apikey=DgrqDkN3UnwGDADZfmGjjOATui3tFMjK&language=en&details=false\")\r\n            .then(res => res.data)\r\n        );    \r\n    }\r\n\r\n    function detailstemp(locationKey) {\r\n        temperatora(locationKey).then(data => setDetails(data))\r\n        console.log(details)\r\n        let t = details.map(i => i.WeatherText)\r\n        console.log(t)\r\n        return t\r\n\r\n    }\r\n    function temperatora(locationKey) {\r\n        let arr = []\r\n        console.log(locationKey)\r\n        return axios.get('https://dataservice.accuweather.com/currentconditions/v1/' + locationKey + '?apikey=DgrqDkN3UnwGDADZfmGjjOATui3tFMjK&language=en&details=false')\r\n            .then(res => res.data);\r\n\r\n    }\r\n    function changeDefult(obj) {\r\n        store.dispatch(favoritecity(obj));\r\n    }\r\n    function color() {\r\n        var t = new Date().getHours();\r\n        if (t < 10) {\r\n            document.write(\"Have a good morning!\");\r\n            document.body.style.backgroundColor = \"yellow\";\r\n        } else if (t < 20) {\r\n            document.write(\"Have a good evening!\");\r\n            document.body.style.backgroundColor = \"orange\";\r\n        } else {\r\n            document.write(\"Have a good night!\");\r\n            document.body.style.backgroundColor = \"grey\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n            <div class=\"container d-flex justify-content-center\">\r\n                <div class=\"weather\">\r\n                    <div class=\"row\">\r\n                        {reducre.length > 0 ?\r\n\r\n                            reducre.map(item => <div>{\r\n                                <div class=\" col-md-6\">\r\n                                    <div class=\"card\"> <span class=\"icon\"><img class=\"img-fluid\" src=\"https://img.icons8.com/emoji/96/000000/sun-emoji.png\" /></span>\r\n                                        <div class=\"title\">\r\n                                            <p>{item.LocalizedName}</p>\r\n                                        </div>\r\n                                        <div class=\"temp\">{detailstemp(item.Key)}<sup>&deg;</sup></div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"link-to-home-page\"> <Link to='/'><button className=\"btn\" onClick={e => changeDefult(item)}>Watching the weather of the favorite</button></Link></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }</div>)\r\n                            : <h2> No favorites</h2>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n"],"sourceRoot":""}